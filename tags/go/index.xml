<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Go on lhj8390</title>
    <link>https://lhj8390.github.io/tags/go/</link>
    <description>Recent content in Go on lhj8390</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ko</language>
    <lastBuildDate>Thu, 18 May 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://lhj8390.github.io/tags/go/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Unary RPC 통신 방식 예제</title>
      <link>https://lhj8390.github.io/post/go/go-grpc-unary-example/</link>
      <pubDate>Thu, 18 May 2023 00:00:00 +0000</pubDate>
      
      <guid>https://lhj8390.github.io/post/go/go-grpc-unary-example/</guid>
      
        <description>grpc에서 통신 방식 중 unary RPC에 대해 설명한다.</description>
      
    </item>
    
    <item>
      <title>gRPC 통신 방식</title>
      <link>https://lhj8390.github.io/post/go/go-grpc-network/</link>
      <pubDate>Mon, 15 May 2023 00:00:00 +0000</pubDate>
      
      <guid>https://lhj8390.github.io/post/go/go-grpc-network/</guid>
      
        <description>grpc에서 통신 방식의 종류인 unary RPC, Server streaming RPC, Client streaming RPC, bidi streaming RPC에 대해 설명한다.</description>
      
    </item>
    
    <item>
      <title>Golang - 테스트 작성하기</title>
      <link>https://lhj8390.github.io/post/go/go-test-code-basic/</link>
      <pubDate>Sat, 06 May 2023 00:00:00 +0000</pubDate>
      
      <guid>https://lhj8390.github.io/post/go/go-test-code-basic/</guid>
      
        <description>golang에서 테스트 코드를 작성하는 기초에 대해 설명한다.</description>
      
    </item>
    
    <item>
      <title>Golang - 채널 버퍼링</title>
      <link>https://lhj8390.github.io/post/go/go-channel-buffering/</link>
      <pubDate>Wed, 03 May 2023 00:00:00 +0000</pubDate>
      
      <guid>https://lhj8390.github.io/post/go/go-channel-buffering/</guid>
      
        <description>golang에서 unbuffered channel, buffer channel 개념과 차이점을 설명한다.</description>
      
    </item>
    
    <item>
      <title>Golang - 동시성 사용하기</title>
      <link>https://lhj8390.github.io/post/go/go-concurrency/</link>
      <pubDate>Thu, 30 Mar 2023 00:00:00 +0000</pubDate>
      
      <guid>https://lhj8390.github.io/post/go/go-concurrency/</guid>
      
        <description>golang에서 동시성 사용과 함께 고루틴, 채널, 뮤텍스를 사용하는 방법를 설명한다.</description>
      
    </item>
    
    <item>
      <title>Golang - 오류 처리하기</title>
      <link>https://lhj8390.github.io/post/go/go-error/</link>
      <pubDate>Sat, 04 Mar 2023 00:00:00 +0000</pubDate>
      
      <guid>https://lhj8390.github.io/post/go/go-error/</guid>
      
        <description>golang에서 오류를 처리하는 방법과 오류 래핑, 패닉과 복구에 대해 설명한다.</description>
      
    </item>
    
    <item>
      <title>Golang - 인터페이스 사용하기</title>
      <link>https://lhj8390.github.io/post/go/go-interface/</link>
      <pubDate>Wed, 01 Mar 2023 00:00:00 +0000</pubDate>
      
      <guid>https://lhj8390.github.io/post/go/go-interface/</guid>
      
        <description>golang에서 인터페이스의 개념과 사용법, 예제를 설명한다.</description>
      
    </item>
    
    <item>
      <title>Golang - 타입과 메서드 사용하기</title>
      <link>https://lhj8390.github.io/post/go/go-type-method/</link>
      <pubDate>Tue, 21 Feb 2023 00:00:00 +0000</pubDate>
      
      <guid>https://lhj8390.github.io/post/go/go-type-method/</guid>
      
        <description>golang에서 타입과 메서드의 개념과 사용하는 방법에 대해 설명한다.</description>
      
    </item>
    
    <item>
      <title>Golang - 포인터 사용하기</title>
      <link>https://lhj8390.github.io/post/go/go-use-pointer/</link>
      <pubDate>Mon, 20 Feb 2023 00:00:00 +0000</pubDate>
      
      <guid>https://lhj8390.github.io/post/go/go-use-pointer/</guid>
      
        <description>golang에서 포인터의 개념 및 함수에서의 사용법, 주의사항에 대해 설명한다.</description>
      
    </item>
    
    <item>
      <title>Golang - 함수 사용하기</title>
      <link>https://lhj8390.github.io/post/go/go-use-function/</link>
      <pubDate>Sun, 19 Feb 2023 00:00:00 +0000</pubDate>
      
      <guid>https://lhj8390.github.io/post/go/go-use-function/</guid>
      
        <description>golang에서 함수를 선언하고 호출하는 방법, 클로저, defer에 대해 설명한다.</description>
      
    </item>
    
    <item>
      <title>Golang - 제어문 사용하기</title>
      <link>https://lhj8390.github.io/post/go/go-if-switch/</link>
      <pubDate>Sun, 12 Feb 2023 00:00:00 +0000</pubDate>
      
      <guid>https://lhj8390.github.io/post/go/go-if-switch/</guid>
      
        <description>golang에서 제어문의 사용법, 예제를 설명한다.</description>
      
    </item>
    
    <item>
      <title>Golang - 복합타입 (맵, 구조체) 사용하기</title>
      <link>https://lhj8390.github.io/post/go/go-string-map-struct/</link>
      <pubDate>Sun, 05 Feb 2023 00:00:00 +0000</pubDate>
      
      <guid>https://lhj8390.github.io/post/go/go-string-map-struct/</guid>
      
        <description>golang에서 복합타입 중 맵, 구조체의 개념과 사용법, 예제를 설명한다.</description>
      
    </item>
    
    <item>
      <title>Golang - 배열과 슬라이스 사용하기</title>
      <link>https://lhj8390.github.io/post/go/go_array_and_slice/</link>
      <pubDate>Thu, 02 Feb 2023 00:00:00 +0000</pubDate>
      
      <guid>https://lhj8390.github.io/post/go/go_array_and_slice/</guid>
      
        <description>golang에서 배열과 슬라이스의 개념과 사용법, 예제를 설명한다.</description>
      
    </item>
    
  </channel>
</rss>